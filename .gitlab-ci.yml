stages:
  - build
  - style
  - test
  - deploy

build-job:
  stage: build
  script:
    - echo "Building s21_cat and s21_grep"
    - cd src && make all
    - cd ..
    - if [ "$?" -ne 0 ]; then
    - bash src/notify.sh "build failed"; exit 1; fi
    - bash src/notify.sh "build succeeded";
  artifacts:
    paths:
      - src/s21_cat
      - src/s21_grep
    expire_in: 30 days
  tags:
    - test

style-job:
  stage: style
  script:
    - echo "Testing style"
    - cppcheck src/*.c
    - cp materials/linters/.clang-format src/.clang-format
    - clang-format -n src/*.c 2> src/report_style
    - if [ -s src/report_style ]; then
    - cat src/report_style
    - bash src/notify.sh "style tests failed"; exit 1; fi
    - rm src/.clang-format src/report_style
    - bash src/notify.sh "style tests succeeded";
  tags:
    - test

test-job:
  stage: test
  script:
    - echo "Testing s21_cat and s21_grep"
    - cd src
    - code1=$(bash tests/s21_cat_tests.sh)
    - if [ "$code1" -ne 0 ]; then
    - bash notify.sh "cat tests failed"; exit 1; fi
    - code2=$(bash tests/s21_grep_tests.sh)
    - if [ "$code2" -ne 0 ]; then
    - bash notify.sh "grep tests failed"; exit 1; fi
    - bash notify.sh "cat and grep tests succeeded";
  tags:
    - test

deploy-prod:
  stage: deploy
  script:
    - if [ -z "$PASS" ]; then
    - bash src/notify.sh "no deploy in automatic mode"; exit 0
    - fi
    - bash src/copy_files.sh $PASS
    - if [ $? -ne 0 ]; then
    - bash src/notify.sh "deploy failed"; exit 1
    - fi
    - bash src/notify.sh "project successfully deployed"
  tags:
    - test
